<?xml version="1.0" encoding="ISO-8859-15"?>
<launch>
  <arg name="voxel_size"       default="0.05"/>
  <arg name="max_ray_length_m" default="5"/>

  <arg name="metric_semantic_reconstruction" default="true"/>

  <!-- Change sensor frame to:
   - 1. VIO's estimated base_link: `left_cam_base_link`
   - 2. Or, if you want to use simulator's ground-truth: `left_cam`
  -->
  <arg name="sensor_frame"       default="left_cam"/>
  <!-- base_link_gt_frame is used to get the static tf between the base_link
  and the sensor_frame -->
  <arg name="base_link_gt_frame" default="base_link_gt"/>
  <arg name="base_link_frame"    default="base_link_gt"/>

  <arg name="rosbag_path" default="/home/junkun/datasets/uHumans2/uHumans2_apartment_s1_00h.bag"/>
  <arg name="semantic_label_2_color_csv_filename" default="tesse_multiscene_archviz1_segmentation_mapping.csv"/>
  <arg name="use_dynamic_masking" default="true"/>

  <!-- Input -->
  <arg name="left_cam_rgb_topic"          default="/tesse/left_cam/rgb/image_raw"/>
  <arg name="left_cam_depth_topic"        default="/tesse/depth_cam/mono/image_raw"/>
  <arg name="left_cam_segmentation_topic" default="/tesse/seg_cam/rgb/image_raw"/>
  <arg name="left_cam_info_topic"         default="/tesse/depth_cam/camera_info"/>

  <arg name="use_freespace_pointcloud"    default="false" />
  <arg name="freespace_pointcloud"        default="/dev/null"/>

  <node name="kimera_semantics_rosbag" pkg="kimera_semantics_ros"
    type="kimera_semantics_rosbag" output="screen" required="true"
    args="--logtostderr=1
          --colorlogtostderr=1
          --log_prefix=1"
    clear_params="true">
    <param name="metric_semantic_reconstruction" value="$(arg metric_semantic_reconstruction)"/>
    <!-- Params for RosbagDataProvider -->
    <param name="rosbag_path"                 value="$(arg rosbag_path)"/>
    <param name="depth_cam_topic"             value="$(arg left_cam_depth_topic)"/>
    <param name="semantic_cam_topic"          value="$(arg left_cam_segmentation_topic)"/>
    <param name="rgb_cam_topic"               value="$(arg left_cam_rgb_topic)"/>
    <param name="left_cam_info_topic"         value="$(arg left_cam_info_topic)"/>
    <!-- Params for KimeraSemantics -->
    <param name="tsdf_voxel_size"           value="$(arg voxel_size)" />
    <param name="tsdf_voxels_per_side"      value="32" />
    <param name="max_ray_length_m"          value="$(arg max_ray_length_m)" />
    <param name="min_time_between_msgs_sec" value="0.2" />
    <param name="voxel_carving_enabled"     value="true" />
    <param name="color_mode"                value="lambert_color"/>
    <param name="use_const_weight"          value="false" />
    <param name="use_freespace_pointcloud"  value="$(arg use_freespace_pointcloud)" />
    <remap from="freespace_pointcloud"      to="$(arg freespace_pointcloud)"/>

    <param name="sensor_frame"              value="$(arg sensor_frame)"/>
    <param name="base_link_gt_frame"        value="$(arg base_link_gt_frame)"/>
    <param name="base_link_frame"           value="$(arg base_link_frame)"/>
    <param name="world_frame"               value="world"/>

    <param name="enable_icp"                value="false" />
    <param name="icp_iterations"            value="10" />

    <param name="verbose"                   value="true" />

    <!-- Method to update voxels' information: "fast" or "merged" -->
    <param name="method"                           value="fast" />
    <!-- "color", "semantic" or "semantic_probability" -->
    <param name="semantic_color_mode"              value="semantic"/>
    <param name="semantic_measurement_probability" value="0.8" />
    <!-- The only dynamic label we have right now are humans, with label 20 -->
    <rosparam if="$(arg use_dynamic_masking)" param="dynamic_semantic_labels">[20]</rosparam>
    <rosparam unless="$(arg use_dynamic_masking)" param="dynamic_semantic_labels">[]</rosparam>

    <!-- Is this needed? -->
    <param name="slice_level" value="1.0" />

    <param name="semantic_label_2_color_csv_filepath"
    value="$(find kimera_semantics_ros)/cfg/$(arg semantic_label_2_color_csv_filename)"/>

    <param name="publish_pointclouds"     value="false"/>
    <param name="update_mesh_every_n_sec" value="0.0" />
    <param name="mesh_filename"           value="$(find kimera_semantics_ros)/mesh_results/mesh.ply" />
    <param name="tsdf_filename"           value="$(find kimera_semantics_ros)/mesh_results/tsdf_esdf_layers.vxblx" />
  </node>
</launch>
